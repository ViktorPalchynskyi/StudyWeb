[{"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\index.js":"1","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\App.js":"2","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Navbar.js":"3","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Landing.js":"4","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\auth\\Register.js":"5","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\auth\\Login.js":"6","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\store.js":"7","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\index.js":"8","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\aler.js":"9","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\type.js":"10","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\aler.js":"11","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Alert.js":"12","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\auth.js":"13","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\auth.js":"14","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\utils\\setAuthToken.js":"15","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\Dashboard.js":"16","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\routing\\PrivateRoute.js":"17","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\profile.js":"18","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\profile.js":"19","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Spinner.js":"20","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\CreateProfile.js":"21","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\DashboardActions.js":"22","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\EditProfile.js":"23","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\AddExperience.js":"24","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\AddEducation.js":"25","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\Experience.js":"26","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\Education.js":"27","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profiles\\Profiles.js":"28","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profiles\\ProfileItem.js":"29"},{"size":197,"mtime":1612188774849,"results":"30","hashOfConfig":"31"},{"size":2139,"mtime":1612703625926,"results":"32","hashOfConfig":"31"},{"size":1694,"mtime":1612704243135,"results":"33","hashOfConfig":"31"},{"size":1151,"mtime":1612537916677,"results":"34","hashOfConfig":"31"},{"size":2919,"mtime":1612284442909,"results":"35","hashOfConfig":"31"},{"size":1921,"mtime":1612284278105,"results":"36","hashOfConfig":"31"},{"size":396,"mtime":1612265271363,"results":"37","hashOfConfig":"31"},{"size":205,"mtime":1612534465795,"results":"38","hashOfConfig":"31"},{"size":398,"mtime":1612266439167,"results":"39","hashOfConfig":"31"},{"size":585,"mtime":1612702970825,"results":"40","hashOfConfig":"31"},{"size":352,"mtime":1612269370021,"results":"41","hashOfConfig":"31"},{"size":486,"mtime":1612268575167,"results":"42","hashOfConfig":"31"},{"size":2065,"mtime":1612539321217,"results":"43","hashOfConfig":"31"},{"size":1127,"mtime":1612645251028,"results":"44","hashOfConfig":"31"},{"size":256,"mtime":1612279348182,"results":"45","hashOfConfig":"31"},{"size":1972,"mtime":1612646009915,"results":"46","hashOfConfig":"31"},{"size":631,"mtime":1612532819009,"results":"47","hashOfConfig":"31"},{"size":1074,"mtime":1612703077409,"results":"48","hashOfConfig":"31"},{"size":5876,"mtime":1612702959421,"results":"49","hashOfConfig":"31"},{"size":296,"mtime":1612538322027,"results":"50","hashOfConfig":"31"},{"size":6285,"mtime":1612554657490,"results":"51","hashOfConfig":"31"},{"size":736,"mtime":1612551754742,"results":"52","hashOfConfig":"31"},{"size":7578,"mtime":1612554649756,"results":"53","hashOfConfig":"31"},{"size":3136,"mtime":1612639915966,"results":"54","hashOfConfig":"31"},{"size":3140,"mtime":1612645756670,"results":"55","hashOfConfig":"31"},{"size":1418,"mtime":1612645485098,"results":"56","hashOfConfig":"31"},{"size":1403,"mtime":1612702420839,"results":"57","hashOfConfig":"31"},{"size":1201,"mtime":1612704166314,"results":"58","hashOfConfig":"31"},{"size":1054,"mtime":1612704934843,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1loe36t",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\index.js",[],["127","128"],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\App.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Navbar.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Landing.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\auth\\Register.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\auth\\Login.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\store.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\index.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\aler.js",["129"],"import {constants as C} from '../actions/type';\r\n\r\nconst initialState = [];\r\n\r\nexport default function( state= initialState , action) { \r\n\r\n   const {type, payload} = action;\r\n\r\n   switch (type) {\r\n      case C.SET_ALERT:\r\n         return [...state, payload];\r\n      case C.REMOVE_ALERT:\r\n         return state.filter(alert => alert.id !== payload);\r\n      default:\r\n         return state;\r\n   }\r\n}","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\type.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\aler.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Alert.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\auth.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\auth.js",["130"],"import {constants as C} from '../actions/type';\r\n\r\nconst initialState = {\r\n   token: localStorage.getItem('token'),\r\n   isAuthenicated: null,\r\n   loading: true,\r\n   user:null\r\n};\r\n\r\nexport default function (state=initialState, action) {\r\n\r\n   const {type, payload} = action; \r\n\r\n   switch (type) {\r\n      case C.USER_LOADED: \r\n         return { \r\n            ...state, \r\n            isAuthenicated: true,\r\n            loading: false,\r\n            user: payload\r\n         };\r\n\r\n      case C.REGISTER_SUCCESS:\r\n      case C.LOGIN_SUCCESS:\r\n         localStorage.setItem('token', payload.token);\r\n         return { \r\n            ...state,\r\n            ...payload,\r\n            isAuthenicated: true,\r\n            loading: false\r\n         };\r\n   \r\n      case C.REGISTER_FAIL:\r\n      case C.AUTH_ERROR: \r\n      case C.LOGIN_FAIL:\r\n      case C.LOGOUT:\r\n      case C.ACCOUNT_DELETED:\r\n         localStorage.removeItem('token');\r\n         return { \r\n            ...state,\r\n            token: null,\r\n            isAuthenicated: false,\r\n            loading: false\r\n         };\r\n\r\n      \r\n\r\n      default:\r\n         return state;\r\n   }\r\n}","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\utils\\setAuthToken.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\Dashboard.js",["131"],"import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {deleteAccount, getCurrentProfile} from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\n\r\nconst Dashboard = ({\r\n   getCurrentProfile,\r\n   deleteAccount,\r\n   auth: {user},\r\n   profile: {profile, loading}}) => {\r\n   useEffect(() => { \r\n      getCurrentProfile();\r\n   }, []);\r\n\r\n   return loading && profile === null ? \r\n       (<Spinner/>) \r\n         : \r\n     (<>\r\n         <h1 className=\"large text-primary\">Dashboard</h1>\r\n         <p className=\"lead\">\r\n            <i className=\"fas fa-user\"></i>{' '}Welcome {user && user.name}\r\n         </p>\r\n         {profile !== null ? \r\n         (<>\r\n            <DashboardActions/>\r\n            <Experience experience={profile.experience}/>\r\n            <Education education={profile.education}/> \r\n\r\n            <div className=\"my-2\">\r\n               <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\r\n                  <i className=\"fas fa-user-minus\"></i> Delete my account\r\n               </button>\r\n            </div>\r\n         </>) \r\n            : \r\n         (<>\r\n         <p>You have not yet setup a profile, please add some info</p>\r\n         <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n         </Link>\r\n         </>)}\r\n      </>)\r\n};\r\n\r\nDashboard.propTypes = { \r\n   getCurrentProfile: PropTypes.func.isRequired,\r\n   deleteAccount: PropTypes.func.isRequired,\r\n   auth: PropTypes.object.isRequired,\r\n   profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => (\r\n   { \r\n      auth: state.auth,\r\n      profile: state.profile\r\n   }\r\n);\r\n\r\nexport default connect(mapStateToProps, {getCurrentProfile, deleteAccount})(Dashboard);","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\routing\\PrivateRoute.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\reducers\\profile.js",["132"],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\actions\\profile.js",["133"],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\layout\\Spinner.js",["134"],"import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nexport default  () => {\r\n   return (\r\n      <>\r\n         <img\r\n            src={spinner}\r\n            style={{width: '200px', margin:'auto', display: 'block'}}\r\n            alt=\"Loading...\"\r\n         />  \r\n      </>\r\n   );\r\n};\r\n","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\CreateProfile.js",["135","136"],"import React, { useState } from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createProfile} from '../../actions/profile';\r\n\r\nconst CreateProfile = ({createProfile, history}) => {\r\n   const [formData, setFormDate] = useState({\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: ''\r\n   });\r\n\r\n   const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n   const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n   } = formData;\r\n\r\n   // Remember the way to get key from value in input\r\n   const onChange = e => setFormDate({...formData, [e.target.name]: e.target.value});\r\n\r\n   const onSubmit = e => { \r\n      e.preventDefault();\r\n      createProfile(formData, history);\r\n   };\r\n\r\n   return (\r\n      <>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\"></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n         {displaySocialInputs && <>\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Twitter URL\"\r\n          name=\"twitter\"\r\n          value={twitter}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Facebook URL\"\r\n          name=\"facebook\"\r\n          value={facebook}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"YouTube URL\"\r\n          name=\"youtube\"\r\n          value={youtube}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Linkedin URL\"\r\n          name=\"linkedin\"\r\n          value={linkedin}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Instagram URL\"\r\n          name=\"instagram\"\r\n          value={instagram}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>   \r\n         </>}\r\n\r\n        \r\n        <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n      </>\r\n   );\r\n};\r\n\r\nCreateProfile.propTypes = {\r\n   createProfile: PropTypes.func.isRequired, \r\n};\r\n\r\n\r\nexport default connect(null, {createProfile})(withRouter(CreateProfile));\r\n\r\n","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\DashboardActions.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\EditProfile.js",["137","138"],"import React, { useState } from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {createProfile, getCurrentProfile} from '../../actions/profile';\r\n\r\nconst EditProfile = (\r\n   {profile:{profile, loading}, \r\n   createProfile, \r\n   getCurrentProfile, \r\n   history}) => {\r\n   const [formData, setFormDate] = useState({\r\n      company: '',\r\n      website: '',\r\n      location: '',\r\n      status: '',\r\n      skills: '',\r\n      githubusername: '',\r\n      bio: '',\r\n      twitter: '',\r\n      facebook: '',\r\n      linkedin: '',\r\n      youtube: '',\r\n      instagram: ''\r\n   });\r\n\r\n   const [displaySocialInputs, toggleSocialInputs] = useState(false);\r\n\r\n   useState(()=> { \r\n      getCurrentProfile();\r\n\r\n      setFormDate({\r\n         company: loading || !profile.company ? '' : profile.company,\r\n         website: loading || !profile.website ? '' : profile.website,\r\n         location: loading || !profile.location ? '' : profile.location,\r\n         status: loading || !profile.status ? '' : profile.status,\r\n         skills: loading || !profile.skills ? '' : profile.skills.join(','),\r\n         githubusername: loading || !profile.githubusername ? '' : profile.githubusername,\r\n         bio: loading || !profile.bio ? '' : profile.bio,\r\n         twitter: loading || !profile.social ? '' : profile.social.twitter,\r\n         facebook: loading || !profile.social ? '' : profile.social.facebook,\r\n         linkedin: loading || !profile.social ? '' : profile.social.linkedin,\r\n         youtube: loading || !profile.social ? '' : profile.social.youtube,\r\n         instagram: loading || !profile.social ? '' : profile.social.instagram\r\n      });\r\n   }, [loading]);\r\n\r\n   const {\r\n    company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram\r\n   } = formData;\r\n\r\n   // Remember the way to get key from value in input\r\n   const onChange = e => setFormDate({...formData, [e.target.name]: e.target.value});\r\n\r\n   const onSubmit = e => { \r\n      e.preventDefault();\r\n      createProfile(formData, history, true);\r\n   };\r\n\r\n   return (\r\n      <>\r\n      <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit={e => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={e => onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={e => onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\"></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={() => toggleSocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n\r\n         {displaySocialInputs && <>\r\n\r\n         <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-twitter fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Twitter URL\"\r\n          name=\"twitter\"\r\n          value={twitter}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n\r\n         <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-facebook fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Facebook URL\"\r\n          name=\"facebook\"\r\n          value={facebook}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-youtube fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"YouTube URL\"\r\n          name=\"youtube\"\r\n          value={youtube}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-linkedin fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Linkedin URL\"\r\n          name=\"linkedin\"\r\n          value={linkedin}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group social-input\">\r\n          <i className=\"fab fa-instagram fa-2x\"></i>\r\n          <input \r\n          type=\"text\" \r\n          placeholder=\"Instagram URL\"\r\n          name=\"instagram\"\r\n          value={instagram}\r\n          onChange={e=> onChange(e)} \r\n          />\r\n        </div>    \r\n         </>}\r\n\r\n        \r\n        <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n      </>\r\n   );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n   createProfile: PropTypes.func.isRequired,\r\n   getCurrentProfile: PropTypes.func.isRequired,\r\n   profile: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({ \r\n   profile: state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps, {createProfile, getCurrentProfile})(withRouter(EditProfile));\r\n\r\n","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\AddExperience.js",["139"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addExperience} from '../../actions/profile';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nconst AddExperience = ({addExperience, history}) => {\r\n\r\n   const [formData, setFormData] = useState({\r\n      company: '',\r\n      title: '',\r\n      location: '',\r\n      from: '',\r\n      to: '',\r\n      current: false,\r\n      description: ''\r\n   });\r\n\r\n   const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n   const {company, title, location, from, to, current, description} = formData;\r\n\r\n   const onChange = e => setFormData({\r\n      ...formData,\r\n      [e.target.name] : e.target.value\r\n   });\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"large text-primary\">\r\n         Add An Experience\r\n         </h1>\r\n         <p className=\"lead\">\r\n         <i className=\"fas fa-code-branch\"></i> Add any developer/programming\r\n         positions that you have had in the past\r\n         </p>\r\n         <small>* = required field</small>\r\n         <form className=\"form\" onSubmit={e => {\r\n            e.preventDefault();\r\n            addExperience(formData, history)\r\n         }}>\r\n         <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* Job Title\" name=\"title\" value={title} onChange={e=> onChange(e)} required />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* Company\" name=\"company\" value={company} onChange={e=> onChange(e)} required />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <input type=\"text\" value={location} onChange={e=> onChange(e)} placeholder=\"Location\" name=\"location\" />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <h4>From Date</h4>\r\n            <input type=\"date\" value={from} onChange={e=> onChange(e)} name=\"from\" />\r\n         </div>\r\n            <div className=\"form-group\">\r\n            <p><input type=\"checkbox\" checked={current} value={current} \r\n            onChange={e=> {\r\n               setFormData({...formData, current: !current});\r\n               toggleDisabled(!toDateDisabled)\r\n            }} name=\"current\" \r\n            />{' '} Current Job</p>\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <h4>To Date</h4>\r\n            <input type=\"date\" value={to} onChange={e=> onChange(e)} name=\"to\" disabled={toDateDisabled ? 'disabled' : ''} />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <textarea\r\n               name=\"description\"\r\n               cols=\"30\"\r\n               rows=\"5\"\r\n               placeholder=\"Job Description\"\r\n               value={description} \r\n               onChange={e=> onChange(e)}\r\n            ></textarea>\r\n         </div>\r\n         <input type=\"submit\" value={\"Submit\"} className=\"btn btn-primary my-1\" />\r\n         <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n   addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {addExperience})(AddExperience);","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profile-form\\AddEducation.js",["140"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {addEducation} from '../../actions/profile';\r\nimport {Link, withRouter} from 'react-router-dom';\r\n\r\nconst AddEducation = ({addEducation, history}) => {\r\n\r\n   const [formData, setFormData] = useState({\r\n      school: '',\r\n      degree: '',\r\n      fieldofstudy: '',\r\n      from: '',\r\n      to: '',\r\n      current: false,\r\n      description: ''\r\n   });\r\n\r\n   const [toDateDisabled, toggleDisabled] = useState(false);\r\n\r\n   const {school, degree, fieldofstudy, from, to, current, description} = formData;\r\n\r\n   const onChange = e => setFormData({\r\n      ...formData,\r\n      [e.target.name] : e.target.value\r\n   });\r\n\r\n   return (\r\n      <>\r\n         <h1 className=\"large text-primary\">\r\n         Add Youre Education\r\n         </h1>\r\n         <p className=\"lead\">\r\n         <i className=\"fas fa-code-branch\"></i> Add any school or bootcamp you have attended\r\n         </p>\r\n         <small>* = required field</small>\r\n         <form className=\"form\" onSubmit={e => {\r\n            e.preventDefault();\r\n            addEducation(formData, history)\r\n         }}>\r\n         <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* School or Bootcamp\" name=\"school\" value={school} onChange={e=> onChange(e)} required />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <input type=\"text\" placeholder=\"* Degree or Certificate\" name=\"degree\" value={degree} onChange={e=> onChange(e)} required />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <input type=\"text\" value={fieldofstudy} onChange={e=> onChange(e)} placeholder=\"Field of Study\" name=\"fieldofstudy\" />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <h4>From Date</h4>\r\n            <input type=\"date\" value={from} onChange={e=> onChange(e)} name=\"from\" />\r\n         </div>\r\n            <div className=\"form-group\">\r\n            <p><input type=\"checkbox\" checked={current} value={current} \r\n            onChange={e=> {\r\n               setFormData({...formData, current: !current});\r\n               toggleDisabled(!toDateDisabled)\r\n            }} name=\"current\" \r\n            />{' '} Current</p>\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <h4>To Date</h4>\r\n            <input type=\"date\" value={to} onChange={e=> onChange(e)} name=\"to\" disabled={toDateDisabled ? 'disabled' : ''} />\r\n         </div>\r\n         <div className=\"form-group\">\r\n            <textarea\r\n               name=\"description\"\r\n               cols=\"30\"\r\n               rows=\"5\"\r\n               placeholder=\"Program Description\"\r\n               value={description} \r\n               onChange={e=> onChange(e)}\r\n            ></textarea>\r\n         </div>\r\n         <input type=\"submit\" value={\"Submit\"} className=\"btn btn-primary my-1\" />\r\n         <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n         </form>\r\n      </>\r\n   );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n   addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, {addEducation})(AddEducation);","M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\Experience.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\dashboard\\Education.js",[],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profiles\\Profiles.js",["141"],"M:\\IT\\Study Code\\js\\node_js\\node_practice_project\\client\\src\\components\\profiles\\ProfileItem.js",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":5,"column":1,"nodeType":"148","endLine":17,"endColumn":2},{"ruleId":"146","severity":1,"message":"147","line":10,"column":1,"nodeType":"148","endLine":51,"endColumn":2},{"ruleId":"149","severity":1,"message":"150","line":18,"column":7,"nodeType":"151","endLine":18,"endColumn":9,"suggestions":"152"},{"ruleId":"146","severity":1,"message":"147","line":11,"column":1,"nodeType":"148","endLine":50,"endColumn":2},{"ruleId":"153","severity":1,"message":"154","line":225,"column":16,"nodeType":"155","messageId":"156","endLine":225,"endColumn":19},{"ruleId":"146","severity":1,"message":"157","line":4,"column":1,"nodeType":"148","endLine":14,"endColumn":3},{"ruleId":"153","severity":1,"message":"158","line":31,"column":5,"nodeType":"155","messageId":"156","endLine":31,"endColumn":19},{"ruleId":"153","severity":1,"message":"159","line":32,"column":5,"nodeType":"155","messageId":"156","endLine":32,"endColumn":8},{"ruleId":"153","severity":1,"message":"158","line":54,"column":5,"nodeType":"155","messageId":"156","endLine":54,"endColumn":19},{"ruleId":"153","severity":1,"message":"159","line":55,"column":5,"nodeType":"155","messageId":"156","endLine":55,"endColumn":8},{"ruleId":"153","severity":1,"message":"160","line":5,"column":15,"nodeType":"155","messageId":"156","endLine":5,"endColumn":25},{"ruleId":"153","severity":1,"message":"160","line":5,"column":15,"nodeType":"155","messageId":"156","endLine":5,"endColumn":25},{"ruleId":"149","severity":1,"message":"161","line":12,"column":7,"nodeType":"151","endLine":12,"endColumn":9,"suggestions":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentProfile'. Either include it or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["165"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","Assign arrow function to a variable before exporting as module default","'githubusername' is assigned a value but never used.","'bio' is assigned a value but never used.","'withRouter' is defined but never used.","React Hook useEffect has a missing dependency: 'getProfiles'. Either include it or remove the dependency array. If 'getProfiles' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["166"],"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [getCurrentProfile]",{"range":"171","text":"172"},"Update the dependencies array to be: [getProfiles]",{"range":"173","text":"174"},[583,585],"[getCurrentProfile]",[376,378],"[getProfiles]"]